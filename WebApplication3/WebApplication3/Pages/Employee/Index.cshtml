@page
@model WebApplication3.Pages.Employee.IndexModel
@using Kendo.Mvc.UI
@using WebApplication3.Model

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@Html.AntiForgeryToken()

@{
    ViewData["Title"] = "Index";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
@(Html.Kendo().Grid<Employees>().Name("grid")
     
                .Filterable()
                .Groupable()
                .Sortable()
                .Editable()
                .Scrollable()
                .ToolBar(x => {
                    x.Create();
                    x.Excel();
                })
                .Columns(columns =>
                {
                    columns.Bound(column => column.Id);
                    columns.Bound(column => column.Date).Format("{0:dd MMMM yyyy}");
                    columns.Bound(column => column.Name);
                    columns.Bound(column => column.Adderss);
                    columns.Bound(column => column.Email);
                    columns.Command(column =>
                    {
                        column.Edit();
                        column.Destroy();
                    });
                })
                 .Excel(excel => excel
                            .FileName("Export.xlsx")
                            .Filterable(true)
                            .ProxyURL("/Employee/Index?handler=Save")
                        )
                .DataSource(ds => ds.Ajax()
                       .Read(r => r.Url("/Employee/Index?handler=Read").Data("forgeryToken"))
                       .Update(u => u.Url("/Employee/Index?handler=Update").Data("forgeryToken"))
                       .Create(c => c.Url("/Employee/Index?handler=Create").Data("forgeryToken"))
                       .Destroy(d => d.Url("/Employee/Index?handler=Destroy").Data("forgeryToken"))
                       .Model(m =>
                       {
                           m.Id(id => id.Id);
                           m.Field(f => f.Id).Editable(false);
                       })
                       .Events(events => events.Error("grid_error")) // Handle the "error" event.
                    .PageSize(10)
                )
                .Pageable()
)

<script>
    function forgeryToken() {
        return kendo.antiForgeryTokens();
    }
    function grid_error(e) {
        var errors = e.errors;
        if (errors) {
            var grid = $("#grid").data("kendoGrid");
            grid.one("dataBinding", function (e) {
                e.preventDefault();
                $.each(errors, function (key, value) {
                    var message = "";
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                    // As long as the key matches the field name, this line of code will be displayed as validation message in the popup.
                    grid.editable.element.find("[data-valmsg-for='" + key + "']").replaceWith('<div class="k-tooltip k-tooltip-error k-validator-tooltip k-invalid-msg field-validation-error" ><span class="k-tooltip-icon k-icon k-i-warning"></span><span class="k-tooltip-content">' + message + '</span><span class="k-callout k-callout-n"></span></div>').show();
                });
            });
        }
    }
</script>
@*<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Employee[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employee[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employee[0].Adderss)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employee[0].Date)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Employee) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adderss)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>*@
